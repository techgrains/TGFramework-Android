apply plugin: 'com.android.library'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-annotations:22.+'
    compile 'com.android.support:appcompat-v7:22.+'
    compile 'com.mcxiaoke.volley:library:1.+'
    compile 'com.google.code.gson:gson:2.+'

    testCompile 'junit:junit:4.12'
    testCompile 'com.google.android:android-test:4.1.1.4'

    testCompile 'com.android.support:support-annotations:22.+'
    testCompile 'com.mcxiaoke.volley:library:1.+'
    testCompile 'com.google.code.gson:gson:2.+'
}

configurations {
    unitTestCompile.extendsFrom testCompile
    unitTestRuntime.extendsFrom testRuntime
}

sourceSets {
    unitTest {
        java.srcDirs = ['src/main/java', 'src/test/java']
        resources.srcDir file('src/test/res')
    }
}

task unitTest(type: Test) {
    testClassesDir = sourceSets.unitTest.output.classesDir
    classpath = sourceSets.unitTest.runtimeClasspath
}

android.libraryVariants.all { variant ->
    task("jar${variant.name}", type: Jar) {
        baseName = "TGFramework"
        //version = "1.0"
        dependsOn variant.javaCompile
        from variant.javaCompile.destinationDir
        exclude '**/BuildConfig*', '**/R.class', '**/R$*.class', '**/R.html', '**/R.*.html', '**/*Test*.*', '**/R*.*'
    }
    task("javaDoc${variant.name}", type: Javadoc) {
        source = variant.javaCompile.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
        options.links("http://docs.oracle.com/javase/8/docs/api/");
        //options.links("http://d.android.com/reference/");
        exclude '**/BuildConfig*', '**/R*'
    }
}

